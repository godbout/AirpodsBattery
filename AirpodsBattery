OUTPUT='ðŸŽ§'; BLUETOOTH_DEFAULTS=$(defaults read /Library/Preferences/com.apple.Bluetooth); SYSTEM_PROFILER=$(system_profiler SPBluetoothDataType 2>/dev/null)
MAC_ADDR=$(grep -b2 "Minor Type: Headphones"<<<"${SYSTEM_PROFILER}"|awk '/Address/{print $3}')
CONNECTED=$(grep -ia6 "${MAC_ADDR}"<<<"${SYSTEM_PROFILER}"|awk '/Connected: Yes/{print 1}')
BLUETOOTH_DATA=$(grep -ia6 '"'"${MAC_ADDR}"'"'<<<"${BLUETOOTH_DEFAULTS}")
BATTERY_LEVELS=("BatteryPercentCombined" "HeadsetBattery" "BatteryPercentSingle" "BatteryPercentCase" "BatteryPercentLeft" "BatteryPercentRight")

if [[ "${CONNECTED}" ]]; then
  for I in "${BATTERY_LEVELS[@]}"; do
    declare -x "${I}"="$(awk -v pat="${I}" '$0~pat{gsub (";",""); print $3 }'<<<"${BLUETOOTH_DATA}")"
    [[ ! -z "${!I}" ]] && OUTPUT="${OUTPUT} $(awk '/BatteryPercent/{print substr($0,15,1)": "}'<<<"${I}")${!I}%"
  done
  printf -v res "%s\\n" "${OUTPUT}"
else
  printf -v res "%s Not Connected\\n" "${OUTPUT}"
fi

battery=$(echo $res | awk '{if ($2 ~ "n|Not") print "Not Connected"; else print " L: " $5 " R: " $7}')
if [[ $battery == "Not Connected" ]]; then
    arg=0;
    subtitle="Press enter to connect";
else
    arg=1;
    subtitle="Press enter to disconnect";
fi

cat << EOB
{"items": [

    {
        "uid": "battery",
        "title": "$battery",
        "subtitle": "$subtitle",
        "arg": "$arg",
    }
]}
EOB
